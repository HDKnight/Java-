<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	   xmlns="http://www.springframework.org/schema/beans" 
	   xmlns:p="http://www.springframework.org/schema/p" 
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd ">

    <!-- set方式注入： -->
    <bean  name="user" class="com.bean.User">
    
    	<!-- 值类型注入：为User对象中名为name的属性注入tom作为值  -->
    	<property name="name" value="tom"></property>
    	<property name="age" value="18"></property>
    	
    	<!--引用类型注入： 为car属性注入下方配置的car对象 -->
    	<property name="car" ref="car"></property>
    </bean>
    
    <!-- 将car对象配置到容器中  -->
    <bean name="car" class="com.bean.Car">
    	<property name="name" value="兰博基尼"></property>
    	<property name="color" value="黄色"></property>
    </bean>
    
<!-- ======================================================= -->
	<!-- 构造函数注入 -->
	<bean name ="user2" class ="com.bean.User">
		<!-- name属性：构造函数的参数名 -->
		<!-- index属性：构造函数的参数索引 -->
		<!-- type属性：构造函数的参数类型 -->
		<constructor-arg name ="name" value ="1200" index="0" type="java.lang.Integer"></constructor-arg>
		<constructor-arg name ="car" ref ="car" index="1" type="com.bean.Car"></constructor-arg>
	</bean>
	
<!-- ====================================================== -->
	<!-- P名称注入方式: 走set方法
		1. 导入p名称空间 xmlns:p="http://www.springframework.org/schema/beans"
		2.使用p:属性完成注入
			值类型： p:属性名="值"
			对象类型： p:属性名-ref="bean名称"
	 -->
	<bean  name="user3" class="com.bean.User" p:name="jack" p:age="20" p:car-ref="car" >
    </bean>

<!-- ====================================================== -->
	<!-- spel注入：spring Expression Language spring表达式语言-->
	<bean name="user4" class="com.bean.User">
		<property name="name" value="#{user.name}" ></property>
    	<property name="age" value="#{user3.age}" ></property>
    	<property name="car" ref="car" ></property>
	</bean>
	
<!-- ====================================================== -->
	<!-- 复杂类型关注入 -->
	<!-- array类型注入 -->
	<bean name="cb" class="com.c_injection.CollectionBean">
		<!-- 如果数组中只准备注入一个值（对象），直接使用ref即可
		<property name="arr" value="tom"></property>
		-->
		
		<!-- array注入，多个元素注入 -->
		<property name="arr">
			<array>
				<value>tom</value>
				<value>jerry</value>
				<ref bean="user4"/>
			</array>
		</property>
		
		<!-- =================================== -->
		<!-- 如果list中只准备注入一个值（对象），直接使用ref即可
		<property name="list" ></property>
		-->
		
		<!-- list注入，多个元素注入 -->
		<property name="list">
			<list>
				<value>mike</value>
				<value>rose</value>
				<ref bean="user3" />
			</list>
		</property>
		
		<!-- =================================== -->
		<!-- map类型注入 -->
		<property name="map">
			<map>
				<entry key="url" value="jdbc:mysql///crm" ></entry>
				<entry key="user" value-ref="user4" ></entry>
				<entry key-ref="user3" value-ref="user2"></entry>
			</map>
		</property>
		
		<!-- =================================== -->
		<!-- Properties类型注入 -->
		<property name="prop">
			<props>
				<prop key="driverClass">com.jdbc.mysql.Driver</prop>
				<prop key="userName">root</prop>
				<prop key="password">1234</prop>
			</props>
		</property>
		
	</bean>
	


</beans>